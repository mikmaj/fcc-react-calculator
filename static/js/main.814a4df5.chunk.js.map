{"version":3,"sources":["components/Buttons/Button/Button.js","components/Buttons/Buttons.js","components/Screens/CalcScreen/CalcScreen.js","components/Screens/OperScreen/OperScreen.js","components/Screens/Screens.js","components/CalculatorContainer/CalculatorContainer.js","App.js","serviceWorker.js","index.js"],"names":["Button","react_default","a","createElement","id","this","props","onClick","className","data-size","size","data-value","value","label","Component","Buttons","children","CalcScreen","string","data","OperScreen","Screens","CalculatorContainer","state","operationsUpper","operationsLower","calculating","previous","calculate","result","_this","join","math","eval","format","precision","newOperationsUpper","concat","Object","toConsumableArray","setState","length","tooManyDigits","continueCalculation","sumDisplay","pop","addCalculationOnDisplay","addCalculation","addNumbersToDisplay","newOperationsLower","startCalculationWithSpecial","handleClick","e","target","getAttribute","includes","components_Screens_Screens","Screens_OperScreen_OperScreen","Screens_CalcScreen_CalcScreen","components_Buttons_Buttons","Buttons_Button_Button","App","components_CalculatorContainer_CalculatorContainer","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.814a4df5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onClick={this.props.onClick}\r\n                className=\"Button\"\r\n                data-size={this.props.size}\r\n                data-value={this.props.value}\r\n            >\r\n                {this.props.label}   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\n\r\nclass Buttons extends Component {\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} className=\"Buttons\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\r\n\r\nclass CalcScreen extends Component {\r\n    render() {\r\n        const string = this.props.data\r\n        return (\r\n            <div id={this.props.id} className=\"Display\">\r\n                <span>{string}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalcScreen;","import React, { Component } from 'react';\r\n\r\nclass OperScreen extends Component {\r\n    render() {\r\n        const string = this.props.data\r\n        return (\r\n            <div id={this.props.id} className=\"Display\">\r\n                <span>{string}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OperScreen;","import React, { Component } from 'react';\r\n\r\nclass Screens extends Component {\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} className=\"Screens\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Screens;","import React, { Component } from 'react';\r\nimport math from 'mathjs'\r\n\r\nimport './CalculatorContainer.css'\r\nimport Button from '../Buttons/Button/Button'\r\nimport Buttons from '../Buttons/Buttons'\r\nimport CalcScreen from '../Screens/CalcScreen/CalcScreen'\r\nimport OperScreen from '../Screens/OperScreen/OperScreen'\r\nimport Screens from '../Screens/Screens'\r\n\r\nclass CalculatorContainer extends Component {\r\n    state = {\r\n        operationsUpper: [],\r\n        operationsLower: [\"0\"],\r\n        calculating: false,\r\n        previous: ''\r\n    }\r\n\r\n    calculate = (value) => {\r\n        // Show a more precise result on the lower display, and round it up a bit on the upper one for more room\r\n        let result = this.state.operationsUpper.join('')\r\n        if (result) {\r\n            result = math.eval(result)\r\n            result = math.format(result, { precision: 8 })\r\n            const newOperationsUpper = [...this.state.operationsUpper, value, result]\r\n            this.setState({\r\n                operationsLower: [result],\r\n                operationsUpper: newOperationsUpper,\r\n                calculating: true,\r\n                previous: value\r\n            })\r\n        }\r\n        if (this.state.operationsUpper.length > 27) {\r\n            this.tooManyDigits()\r\n        }\r\n    }\r\n\r\n    // Allow calculation chaining by extracting the result and continuing calculation normally\r\n    continueCalculation = (value) => {\r\n        const sumDisplay = [...this.state.operationsUpper].pop()\r\n        this.setState({\r\n            operationsUpper: [sumDisplay, value],\r\n            operationsLower: [value],\r\n            previous: value\r\n        })\r\n        if (this.state.operationsUpper.length > 27) {\r\n            this.tooManyDigits()\r\n        }\r\n    }\r\n\r\n    // Add the operator on the lower display and make sure the whole operation is on the upper display\r\n    addCalculationOnDisplay = (value) => {\r\n        const addCalculation = [...this.state.operationsUpper, value]\r\n        this.setState({\r\n            operationsUpper: addCalculation,\r\n            operationsLower: [value],\r\n            previous: value\r\n        })\r\n        if (this.state.operationsUpper.length > 27) {\r\n            this.tooManyDigits()\r\n        }\r\n    }\r\n\r\n    // Insert whole or decimal numbers on the screen(s)\r\n    addNumbersToDisplay = (value) => {\r\n        const newOperationsLower = [...this.state.operationsLower, value]\r\n        const newOperationsUpper = [...this.state.operationsUpper, value]\r\n        this.setState({\r\n            operationsUpper: newOperationsUpper,\r\n            operationsLower: newOperationsLower,\r\n            previous: value\r\n        })\r\n    }\r\n\r\n    // Allow starting a calculation with a decimal or a negative number\r\n    startCalculationWithSpecial = (value) => {\r\n        this.setState({\r\n            operationsUpper: [value],\r\n            operationsLower: [value],\r\n            previous: value,\r\n            calculating: true\r\n        })\r\n    }\r\n\r\n    tooManyDigits = value => {\r\n        this.setState({\r\n            operationsUpper: [],\r\n            operationsLower: [\"TOO MANY DIGITS\"],\r\n            previous: value,\r\n            calculating: false\r\n        })\r\n    }\r\n\r\n    handleClick = e => {\r\n        // Get the data value of the button that was pressed\r\n        const value = e.target.getAttribute('data-value')\r\n        switch (value) {\r\n            // If calculator is cleared, return initial state\r\n            case 'clear':\r\n                this.setState({\r\n                    operationsUpper: [],\r\n                    operationsLower: [\"0\"],\r\n                    calculating: false,\r\n                    previous: value\r\n                })\r\n                break\r\n\r\n            // If = is pressed, calculate the result\r\n            case '=':\r\n                // Prevent crashing from inputting only an operator and pressing '='\r\n                if (this.state.previous === '+' || this.state.previous === '-' || this.state.previous === '*' || this.state.previous === '/') {\r\n                    this.setState({\r\n                        operationsUpper: [],\r\n                        operationsLower: ['ERROR']\r\n                    })\r\n                } else {\r\n                    this.calculate(value)\r\n                }\r\n                break\r\n\r\n            // Allow to start calculating with a '.' \r\n            case '.':\r\n                if (!this.state.calculating) {\r\n                    this.startCalculationWithSpecial(value)\r\n                } else {\r\n                    if (this.state.previous !== '.') {\r\n                        // Don't do anything if the last button pressed was '=' OR if one decimal has been inserted to the current number\r\n                        if (this.state.previous === '=' || this.state.operationsLower.includes('.')) {\r\n                            break\r\n                        } else {\r\n                            this.addNumbersToDisplay(value)\r\n                        }\r\n                    }\r\n                }\r\n                break\r\n\r\n            // If + is pressed, set lower display to show only '+'\r\n            case '+':\r\n                if (this.state.previous !== '+') {\r\n                    if (this.state.previous === '=') {\r\n                        this.continueCalculation(value)\r\n                    } else {\r\n                        this.addCalculationOnDisplay(value)\r\n                    }\r\n                }\r\n                break\r\n\r\n            case '*':\r\n                if (this.state.previous !== '*') {\r\n                    if (this.state.previous === '=') {\r\n                        this.continueCalculation(value)\r\n                    } else {\r\n                        this.addCalculationOnDisplay(value)\r\n                    }\r\n                }\r\n                break\r\n\r\n            // Allow to start calculating with a '-' \r\n            case '-':\r\n                if (!this.state.calculating) {\r\n                    this.startCalculationWithSpecial(value)\r\n                } else {\r\n                    if (this.state.previous !== '-') {\r\n                        if (this.state.previous === '=') {\r\n                            this.continueCalculation(value)\r\n                        } else {\r\n                            this.addCalculationOnDisplay(value)\r\n                        }\r\n                    }\r\n                }\r\n                break\r\n\r\n            case '/':\r\n                if (this.state.previous !== '/') {\r\n                    if (this.state.previous === '=') {\r\n                        this.continueCalculation(value)\r\n                    } else {\r\n                        this.addCalculationOnDisplay(value)\r\n                    }\r\n                }\r\n                break\r\n\r\n            default:\r\n                // If calculator is on stand-by, remove the default zero by inserting the input value in an empty array\r\n                if (!this.state.calculating) {\r\n                    const newOperationsLower = [value]\r\n                    const newOperationsUpper = [value]\r\n                    this.setState({\r\n                        operationsLower: newOperationsLower,\r\n                        operationsUpper: newOperationsUpper,\r\n                        calculating: true,\r\n                        previous: value\r\n                    })\r\n                    break\r\n                } else {\r\n                    // Only allow operators after a calculation\r\n                    if (this.state.previous === '=') {\r\n                        break\r\n                    } else {\r\n                        // If an operation key was pressed previously, push the number in an empty array on the lower display\r\n                        if (this.state.previous === '+' || this.state.previous === '-' || this.state.previous === '*' || this.state.previous === '/') {\r\n                            const newOperationsLower = [value]\r\n                            const newOperationsUpper = [...this.state.operationsUpper, value]\r\n                            this.setState({\r\n                                operationsUpper: newOperationsUpper,\r\n                                operationsLower: newOperationsLower,\r\n                                previous: value\r\n                            })\r\n                        } else {\r\n                            if (this.state.operationsLower.length <= 19) {\r\n                                this.addNumbersToDisplay(value)\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Screens id=\"screens\">\r\n                    <OperScreen id=\"operScreen\" data={this.state.operationsUpper} />\r\n                    <CalcScreen id=\"calcScreen\" data={this.state.operationsLower} />\r\n                </Screens>\r\n                <Buttons id=\"buttons\">\r\n                    <Button id=\"clear\" onClick={this.handleClick} label=\"C\" value=\"clear\" />\r\n                    <Button id=\"divide\" onClick={this.handleClick} label=\"/\" value=\"/\" />\r\n                    <Button id=\"multiply\" onClick={this.handleClick} label=\"*\" value=\"*\" />\r\n                    <Button id=\"seven\" onClick={this.handleClick} label=\"7\" value=\"7\" />\r\n                    <Button id=\"eight\" onClick={this.handleClick} label=\"8\" value=\"8\" />\r\n                    <Button id=\"nine\" onClick={this.handleClick} label=\"9\" value=\"9\" />\r\n                    <Button id=\"subtract\" onClick={this.handleClick} label=\"-\" value=\"-\" />\r\n                    <Button id=\"four\" onClick={this.handleClick} label=\"4\" value=\"4\" />\r\n                    <Button id=\"five\" onClick={this.handleClick} label=\"5\" value=\"5\" />\r\n                    <Button id=\"six\" onClick={this.handleClick} label=\"6\" value=\"6\" />\r\n                    <Button id=\"add\" onClick={this.handleClick} label=\"+\" value=\"+\" />\r\n                    <Button id=\"one\" onClick={this.handleClick} label=\"1\" value=\"1\" />\r\n                    <Button id=\"two\" onClick={this.handleClick} label=\"2\" value=\"2\" />\r\n                    <Button id=\"three\" onClick={this.handleClick} label=\"3\" value=\"3\" />\r\n                    <Button id=\"equals\" onClick={this.handleClick} label=\"=\" value=\"=\" />\r\n                    <Button id=\"zero\" onClick={this.handleClick} label=\"0\" value=\"0\" />\r\n                    <Button id=\"decimal\" onClick={this.handleClick} label=\".\" value=\".\" />\r\n                </Buttons>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalculatorContainer;","import React, { Component } from 'react';\nimport './App.css';\n\nimport CalculatorContainer from './components/CalculatorContainer/CalculatorContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <CalculatorContainer />\n          <footer>\n            created by <a href=\"https://github.com/mikmaj\" target=\"_blank\" rel=\"noopener noreferrer\"> mikmaj </a>\n          </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}